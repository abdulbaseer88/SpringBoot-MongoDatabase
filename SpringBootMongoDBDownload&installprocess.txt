
		SpringBoot-MongoDatabase

=> MongoDB is a NoSQL Database.
=> It stores data in Collection Format (ie like a Table in SQL DBs)
=> Every Collection Stores data in Documents Format (ie like a Row in SQL DBs)
=> Every Document is internally JSON format.
Ex JSON:
  { key:val, ..... }
=> Every JSON Document is identified using one ID(_id) which is  default 
   HexaDecimal Numebr (0-9 A-F).
=> Id(PK) is auto-generated by MongoDB only. (Even we can change to our own type).
=> Spring Boot supports both Embeeded MongoDb and External MongoDB(Download and Install)
======================Download&installprocess=====================================
#1. Download Link:
https://www.mongodb.com/try/download/community

Version: 3.6
OS     : Windows
Type   : MSI
[Click on Download button]

> Next > Next > Finish

#2. Set path
> Copy Path : C:\Program Files\MongoDB\Server\3.6\bin

> Right click on MyComputer 
> Adv System  Settings 
> Click on Environment Variable
> Choose Path 
> Click Edit Option
> Paste Path and add Semicolon Symbol(;)
> OK(3 times)

#3 MongoDB Folder Setup

> Goto C drive
> Create folder 'data'
> open folder data
> Create a folder db

It should looks like: C:/data/db/

#4. Start Mongo Server
cmd> mongod

#5. Start Mongo Client
cmd> mongo

#6. Stop MongoServer/Client
> press ctrl+C
> exit
--------Basic MongoDB Commands----------------------------------------------------
https://docs.mongodb.com/v3.6/reference/command/

1. View all existed dbs

> show dbs

2. see current db

> db

3. Create our own db

> use <dbName>
> use nit

4. view all existed collections

> show collections

5. Create a collection and insert data.
  [** If we write any insert command then collection gets created automatically]

> db.<collectionName>.insert({key:val...})
> db.student.insert({"sid":10,"sname":"SAM","sfee":3200.0})

6. Display all Documents(JSON) from a Collection

> db.<collectionName>.find()
> db.<collectionName>.find().pretty()

> db.student.find()
> db.student.find().pretty()
> db.student.find({"sname":"SYED"}).pretty()

7. Delete one Document (JSON) from a Collection

> db.<collectionName>.deleteOne({k:v})
> db.<collectionName>.deleteMany({k:v})

> db.student.deleteOne({"sname":"SYED"})

8. Drop a Collection

> db.<collectionName>.drop()
> db.student.drop()

-------Task--------------------------------------------------------------
Q) Which database type is used for what case? SQL Db and NoSQL Db?
A) 

---------------------------------------------------------------------
*) Note: In Java one Object is equals to in Mognodb it is one JSON Document.


=========code=========================
1. Create Starter Project
Name : SpringBoot2MongoDbFirstApp
Dep  : Spring Boot Mongodb, lombok

2. Model class
package in.nareshit.raghu.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Data
@NoArgsConstructor
@RequiredArgsConstructor
@Document // Maps Model class objects as JSON Documents
public class Employee {
	@Id // makes this variable as ID and auto-generated
	private String id;
	
	@NonNull
	private Integer eid;
	@NonNull
	private String ename;
	@NonNull
	private Double esal;
}

3. Repository Interface
package in.nareshit.raghu.repo;

import org.springframework.data.mongodb.repository.MongoRepository;

import in.nareshit.raghu.model.Employee;

public interface EmployeeRepository extends MongoRepository<Employee, String> {

}

4. Runner class
package in.nareshit.raghu.runner;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import in.nareshit.raghu.model.Employee;
import in.nareshit.raghu.repo.EmployeeRepository;

@Component
public class EmployeeTestRunner implements CommandLineRunner {
	@Autowired
	private EmployeeRepository repo;
	
	@Override
	public void run(String... args) throws Exception {
		repo.save(new Employee(101,"A",5000.0));
		repo.save(new Employee(102,"B",6000.0));
		repo.save(new Employee(103,"C",7000.0));
		repo.save(new Employee(104,"D",8000.0));
		
		System.out.println("___DONE____");
	}

}

5. application.properties
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=nit

6. Start Mongo server
cmd> mongod

7. Run Main class

8. Open mongo client cmd> mongo
   and execute below commands

> use nit
> show collections
> db.employee.find().pretty()
====================================================================
*) If mongo server is not started and trying to run SpringBoot application
  then ConnectException: Connection refused: no further information.


*) MongoDB UI 
> Mongo Compass (Heavy Software)
> Robo 3T (Light software) https://robomongo.org/download
Studio 3T: Professional IDE for MongoDB